# inspired by https://github.com/CQCL/hugrverse-actions/blob/main/rs-semver-checks/action.yml
name: Semver checks

on:
  pull_request:

permissions:
  contents: read
  pull-requests: write

jobs:
  semver-checks:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ github.event.pull_request.merge_commit_sha || github.event.merge_group.head.sha }}
          path: PR_BRANCH
      - name: Checkout baseline
        uses: actions/checkout@v5
        with:
          ref: ${{ inputs.baseline-rev || github.event.pull_request.base.ref || github.event.merge_group.base.ref }}
          path: BASELINE_BRANCH
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable

      # Install a prebuilt binary of cargo-semver-checks
      - uses: cargo-bins/cargo-binstall@main
      - name: Install cargo-semver-checks
        run: cargo binstall -y cargo-semver-checks

      # Abort if the crate has build errors.
      - name: Check for build errors
        id: build
        working-directory: PR_BRANCH
        run: cargo check --all-targets

      # Run cargo-semver-checks against the PR's target branch.
      - name: Check for public API changes
        id: check-changes
        shell: bash
        working-directory: PR_BRANCH
        run: |
          # Don't fail the workflow when semver-checks returns a non-zero exit code.
          set +e

          cargo semver-checks --color never --baseline-root ../BASELINE_BRANCH --release-type minor > diagnostic.txt
          if [ "$?" -ne 0 ]; then
            echo "breaking=true" >> $GITHUB_OUTPUT
          else
            echo "breaking=false" >> $GITHUB_OUTPUT
          fi

          {
            echo 'semver_checks_diagnostic<<EOF'
            cat diagnostic.txt
            echo
            echo EOF
          } >> $GITHUB_OUTPUT

          echo "semver-checks diagnostic:\n"
          cat diagnostic.txt

      # Check if the PR title contains a breaking change flag,
      # to change the feedback message.
      - name: Check for breaking change flag
        if: ${{ github.event_name == 'pull_request' || github.event_name == 'pull_request_target' }}
        id: breaking-pr
        shell: bash
        run: |
          if echo "${PR_TITLE}" | grep -qE '^[^:(]*(\(.*\))?\!:.*$'; then
            echo "breaking=true" >> $GITHUB_OUTPUT
          else
            echo "breaking=false" >> $GITHUB_OUTPUT
          fi
        env:
          PR_TITLE: ${{ github.event.pull_request.title }}

      # Debug step
      - run: |
          echo "breaking: ${{ steps.check-changes.outputs.breaking }}"
          echo "breaking-pr: ${{ steps.breaking-pr.outputs.breaking }}"

      # Post a diagnostics comment if there are breaking changes and the PR has been marked as breaking.
      - name: Post a comment about the breaking changes. PR marked as breaking.
        if: ${{ (github.event_name == 'pull_request' || github.event_name == 'pull_request_target') && steps.check-changes.outputs.breaking == 'true' && steps.breaking-pr.outputs.breaking == 'true' }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: semver-checks
          message: |
            This PR contains breaking changes to the public API.

            <details>
              <summary>cargo-semver-checks summary</summary>
            
              ```
              ${{ steps.check-changes.outputs.semver_checks_diagnostic }}
              ```
            
            </details>

      # Post a help comment if there are breaking changes, and the PR hasn't been marked as breaking.
      - name: Post a comment about the breaking changes. PR *not* marked as breaking.
        if: ${{ (github.event_name == 'pull_request' || github.event_name == 'pull_request_target') && steps.check-changes.outputs.breaking == 'true' && steps.breaking-pr.outputs.breaking == 'false' }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: semver-checks
          message: |
            This PR contains breaking changes to the public API.
            Please deprecate the old API instead (if possible), or mark the PR with a `!` to indicate a breaking change.

            <details>
              <summary>cargo-semver-checks summary</summary>
            
              ```
              ${{ steps.check-changes.outputs.semver_checks_diagnostic }}
              ```
            
            </details>

      - name: Remove the checked out directories
        run: rm -rf PR_BRANCH BASELINE_BRANCH
      - name: Fail if there are undeclared breaking changes
        if: ${{ steps.check-changes.outputs.breaking == 'true' && steps.breaking-pr.outputs.breaking == 'false' }}
        shell: bash
        run: exit 1

      # Delete previous comments when the issues have been resolved
      # This step doesn't run if any of the previous checks fails.
      - name: Delete previous comments
        uses: marocchino/sticky-pull-request-comment@v2
        if: ${{ (github.event_name == 'pull_request' || github.event_name == 'pull_request_target') && steps.check-changes.outputs.breaking == 'false' }}
        with:
          header: semver-checks
          delete: true
